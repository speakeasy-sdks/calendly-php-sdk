<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace calendly\calendly\Models\Shared;


/**
 * Entry - Object for a created activity log record
 * 
 * @package calendly\calendly\Models\Shared
 * @access public
 */
class Entry
{
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $action;
    
    /**
     * The Calendly actor that took the action creating the activity log entry
     * 
     * 
     * Specific actors:
     * 
     * <details>
     * <summary>Calendly System</summary>
     * 
     * Used when an action is performed by the Calendly system and not triggered directly by a user interaction.
     * 
     * Example:
     * ```json
     * {
     *     "display_name": "Calendly System",
     *     "type": "System"
     * }
     * ```
     * 
     * </details>
     * 
     * <br />
     * 
     * <details>
     * <summary>Calendly Support</summary>
     * Used when an action is performed by Calendly support.
     * 
     * Example:
     * ```json
     * {
     *   "display_name": "Calendly Support",
     *   "organization": {
     *     "uri": "https://api.calendly.com/organizations/AAAAAAAAAAAAAAAA"
     *   },
     *   "type": "User",
     *   "uri": "https://api.calendly.com/users/AAAAAAAAAAAAAAAA"
     * }
     * ```
     * </details>
     * 
     * 
     * @var ?\calendly\calendly\Models\Shared\Actor $actor
     */
	#[\JMS\Serializer\Annotation\SerializedName('actor')]
    #[\JMS\Serializer\Annotation\Type('calendly\calendly\Models\Shared\Actor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Actor $actor = null;
    
    /**
     * $details
     * 
     * @var array<string, mixed> $details
     */
	#[\JMS\Serializer\Annotation\SerializedName('details')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    public array $details;
    
	#[\JMS\Serializer\Annotation\SerializedName('fully_qualified_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $fullyQualifiedName;
    
	#[\JMS\Serializer\Annotation\SerializedName('namespace')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $namespace;
    
    /**
     * The date and time of the entry (format: "2020-01-02T03:04:05.678Z").
     * 
     * @var \DateTime $occurredAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('occurred_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $occurredAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('organization')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $organization;
    
	#[\JMS\Serializer\Annotation\SerializedName('uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $uri;
    
	public function __construct()
	{
		$this->action = "";
		$this->actor = null;
		$this->details = [];
		$this->fullyQualifiedName = "";
		$this->namespace = "";
		$this->occurredAt = new \DateTime();
		$this->organization = "";
		$this->uri = "";
	}
}
