<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace calendly\calendly\Models\Shared;


/**
 * WebhookSubscription - Webhook Subscription Object
 * 
 * @package calendly\calendly\Models\Shared
 * @access public
 */
class WebhookSubscription
{
    /**
     * The callback URL to use when the event is triggered
     * 
     * @var string $callbackUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('callback_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $callbackUrl;
    
    /**
     * The moment when the webhook subscription was created (e.g. "2020-01-02T03:04:05.678123Z")
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * The URI of the user who created the webhook subscription
     * 
     * @var string $creator
     */
	#[\JMS\Serializer\Annotation\SerializedName('creator')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $creator;
    
    /**
     * A list of events to which the webhook is subscribed
     * 
     * @var array<\calendly\calendly\Models\Shared\WebhookSubscriptionEventsEnum> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('events')]
    #[\JMS\Serializer\Annotation\Type('array<enum<calendly\calendly\Models\Shared\WebhookSubscriptionEventsEnum>>')]
    public array $events;
    
    /**
     * The URI of the organization that's associated with the webhook subscription
     * 
     * @var string $organization
     */
	#[\JMS\Serializer\Annotation\SerializedName('organization')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $organization;
    
    /**
     * The date and time the webhook subscription is retried
     * 
     * @var \DateTime $retryStartedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('retry_started_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $retryStartedAt;
    
    /**
     * The scope of the webhook subscription
     * 
     * @var \calendly\calendly\Models\Shared\WebhookSubscriptionScopeEnum $scope
     */
	#[\JMS\Serializer\Annotation\SerializedName('scope')]
    #[\JMS\Serializer\Annotation\Type('enum<calendly\calendly\Models\Shared\WebhookSubscriptionScopeEnum>')]
    public WebhookSubscriptionScopeEnum $scope;
    
    /**
     * Indicates if the webhook subscription is "active" or "disabled"
     * 
     * @var \calendly\calendly\Models\Shared\WebhookSubscriptionStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<calendly\calendly\Models\Shared\WebhookSubscriptionStateEnum>')]
    public WebhookSubscriptionStateEnum $state;
    
    /**
     * The moment when the webhook subscription was last updated (e.g. "2020-01-02T03:04:05.678123Z")
     * 
     * @var \DateTime $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $updatedAt;
    
    /**
     * Canonical reference (unique identifier) for the webhook
     * 
     * @var string $uri
     */
	#[\JMS\Serializer\Annotation\SerializedName('uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $uri;
    
    /**
     * The URI of the user that's associated with the webhook subscription
     * 
     * @var string $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $user;
    
	public function __construct()
	{
		$this->callbackUrl = "";
		$this->createdAt = new \DateTime();
		$this->creator = "";
		$this->events = [];
		$this->organization = "";
		$this->retryStartedAt = new \DateTime();
		$this->scope = \calendly\calendly\Models\Shared\WebhookSubscriptionScopeEnum::USER;
		$this->state = \calendly\calendly\Models\Shared\WebhookSubscriptionStateEnum::ACTIVE;
		$this->updatedAt = new \DateTime();
		$this->uri = "";
		$this->user = "";
	}
}
