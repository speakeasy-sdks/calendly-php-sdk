<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace calendly\calendly\Models\Shared;


/**
 * EventType - A configuration for an Event
 * 
 * @package calendly\calendly\Models\Shared
 * @access public
 */
class EventType
{
    /**
     * Indicates if the event is active or not.
     * 
     * @var bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $active;
    
    /**
     * Indicates if this event type is managed by an organization admin
     * 
     * @var bool $adminManaged
     */
	#[\JMS\Serializer\Annotation\SerializedName('admin_managed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $adminManaged;
    
    /**
     * Indicates if the event type is for a poll or an instant booking
     * 
     * @var \calendly\calendly\Models\Shared\EventTypeBookingMethodEnum $bookingMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('booking_method')]
    #[\JMS\Serializer\Annotation\Type('enum<calendly\calendly\Models\Shared\EventTypeBookingMethodEnum>')]
    public EventTypeBookingMethodEnum $bookingMethod;
    
    /**
     * The hexadecimal color value of the event type's scheduling page
     * 
     * @var string $color
     */
	#[\JMS\Serializer\Annotation\SerializedName('color')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $color;
    
    /**
     * The moment the event type was created (e.g. "2020-01-02T03:04:05.678123Z")
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * $customQuestions
     * 
     * @var array<\calendly\calendly\Models\Shared\EventTypeCustomQuestion> $customQuestions
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom_questions')]
    #[\JMS\Serializer\Annotation\Type('array<calendly\calendly\Models\Shared\EventTypeCustomQuestion>')]
    public array $customQuestions;
    
    /**
     * The moment the event type was deleted (e.g. "2020-01-02T03:04:05.678123Z"). Since event types can be deleted but their scheduled events remain it's useful to fetch a deleted event type when you still require event type data for a scheduled event.
     * 
     * @var \DateTime $deletedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $deletedAt;
    
    /**
     * The event type's description (formatted with HTML)
     * 
     * @var string $descriptionHtml
     */
	#[\JMS\Serializer\Annotation\SerializedName('description_html')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $descriptionHtml;
    
    /**
     * The event type's description (in non formatted text)
     * 
     * @var string $descriptionPlain
     */
	#[\JMS\Serializer\Annotation\SerializedName('description_plain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $descriptionPlain;
    
    /**
     * The length of sessions booked with this event type
     * 
     * @var float $duration
     */
	#[\JMS\Serializer\Annotation\SerializedName('duration')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $duration;
    
    /**
     * Contents of a note that may be associated with the event type
     * 
     * @var string $internalNote
     */
	#[\JMS\Serializer\Annotation\SerializedName('internal_note')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $internalNote;
    
    /**
     * Indicates if the event type is "solo" (belongs to an individual user) or "group"
     * 
     * @var \calendly\calendly\Models\Shared\EventTypeKindEnum $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('enum<calendly\calendly\Models\Shared\EventTypeKindEnum>')]
    public EventTypeKindEnum $kind;
    
    /**
     * A formatted description of the kind of event type.
     * 
     * @var \calendly\calendly\Models\Shared\EventTypeKindDescriptionEnum $kindDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind_description')]
    #[\JMS\Serializer\Annotation\Type('enum<calendly\calendly\Models\Shared\EventTypeKindDescriptionEnum>')]
    public EventTypeKindDescriptionEnum $kindDescription;
    
    /**
     * The event type name (in human-readable format)
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Indicates if the event type is "round robin" (alternates between hosts) or "collective" (invitees pick a time when all participants are available) or "null" (the event type doesn’t consider the availability of a group participants)
     * 
     * @var \calendly\calendly\Models\Shared\EventTypePoolingTypeEnum $poolingType
     */
	#[\JMS\Serializer\Annotation\SerializedName('pooling_type')]
    #[\JMS\Serializer\Annotation\Type('enum<calendly\calendly\Models\Shared\EventTypePoolingTypeEnum>')]
    public EventTypePoolingTypeEnum $poolingType;
    
    /**
     * The publicly visible profile of a User or a Team that's associated with the Event Type (note: some Event Types don't have profiles)
     * 
     * @var \calendly\calendly\Models\Shared\Profile $profile
     */
	#[\JMS\Serializer\Annotation\SerializedName('profile')]
    #[\JMS\Serializer\Annotation\Type('calendly\calendly\Models\Shared\Profile')]
    public Profile $profile;
    
    /**
     * The URL of the user’s scheduling site where invitees book this event type
     * 
     * @var string $schedulingUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('scheduling_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $schedulingUrl;
    
    /**
     * Indicates if the event type is hidden on the owner's main scheduling page
     * 
     * @var bool $secret
     */
	#[\JMS\Serializer\Annotation\SerializedName('secret')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $secret;
    
    /**
     * The portion of the event type's URL that identifies a specific web page (in a human-readable format)
     * 
     * @var string $slug
     */
	#[\JMS\Serializer\Annotation\SerializedName('slug')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $slug;
    
    /**
     * Indicates if the event type is "AdhocEventType" (ad hoc event) or "StandardEventType" (standard event type)
     * 
     * @var \calendly\calendly\Models\Shared\EventTypeTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<calendly\calendly\Models\Shared\EventTypeTypeEnum>')]
    public EventTypeTypeEnum $type;
    
    /**
     * The moment the event type was last updated (e.g. "2020-01-02T03:04:05.678123Z")
     * 
     * @var \DateTime $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $updatedAt;
    
    /**
     * Canonical reference (unique identifier) for the event type
     * 
     * @var string $uri
     */
	#[\JMS\Serializer\Annotation\SerializedName('uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $uri;
    
	public function __construct()
	{
		$this->active = false;
		$this->adminManaged = false;
		$this->bookingMethod = \calendly\calendly\Models\Shared\EventTypeBookingMethodEnum::INSTANT;
		$this->color = "";
		$this->createdAt = new \DateTime();
		$this->customQuestions = [];
		$this->deletedAt = new \DateTime();
		$this->descriptionHtml = "";
		$this->descriptionPlain = "";
		$this->duration = 0;
		$this->internalNote = "";
		$this->kind = \calendly\calendly\Models\Shared\EventTypeKindEnum::SOLO;
		$this->kindDescription = \calendly\calendly\Models\Shared\EventTypeKindDescriptionEnum::COLLECTIVE;
		$this->name = "";
		$this->poolingType = \calendly\calendly\Models\Shared\EventTypePoolingTypeEnum::ROUND_ROBIN;
		$this->profile = new \calendly\calendly\Models\Shared\Profile();
		$this->schedulingUrl = "";
		$this->secret = false;
		$this->slug = "";
		$this->type = \calendly\calendly\Models\Shared\EventTypeTypeEnum::STANDARD_EVENT_TYPE;
		$this->updatedAt = new \DateTime();
		$this->uri = "";
	}
}
